# https://www.playframework.com/documentation/latest/SecurityHeaders
# Connect to localhost:9000 for content security policy on websockets
play.filters.headers {
  contentSecurityPolicy = "connect-src 'self' ws://localhost:9000 ws://*.amazonaws.com:9000"
}

# https://www.playframework.com/documentation/latest/AllowedHostsFilter
# Allow requests to localhost:9000 and to my server on AWS
play.filters.hosts {
  allowed = ["localhost:9000", ".amazonaws.com:9000"]
}

# override Akka defaults for both Play and Akka systems to always return to the thread pool
# after processing just one message, since that message may end up being to solve a hard problem
akka.actor.default-dispatcher.throughput = 1
play.akka.actor.default-dispatcher.throughput = 1

euler-blocking-context {
  fork-join-executor {

  }
  throughput = 1
}

play.modules {
  enabled += modules.EulerProblemMasterInjectorModule
  enabled += modules.ClientBroadcasterInjectorModule
}

# Frequency of system status updates
project_euler.status_update_freq_sec = 1

# Max number of Akka actors to be started by logical CPU core
project_euler.workers_per_cpu = 4

# How to long allow a solution to take before kicking off a new instance of solution to the same problem
project_euler.problem_max_age_seconds = 1200